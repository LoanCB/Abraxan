# Generated by Django 4.0.4 on 2022-06-10 14:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContractRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de dernière modification')),
                ('comment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Commentaire')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'RH en cours de traitement'), (2, 'RH dossier complet - à traiter'), (3, 'Dossier complet - à faire'), (4, 'Attente de document'), (5, 'écart GP'), (6, 'Demande incomplète'), (7, 'Fait'), (8, 'Envoyé'), (9, 'Signé'), (10, 'Deuxième période'), (11, 'Annulé')], default=4, verbose_name='Statut')),
                ('applied_rate', models.FloatField(verbose_name='Tarif à appliquer')),
                ('ttc', models.BooleanField(default=False, help_text='SST si faux', verbose_name='Toute Taxes Comprises')),
                ('hourly_volume', models.FloatField(verbose_name='Volume horaire')),
                ('unit', models.PositiveSmallIntegerField(choices=[(1, 'Demie-journée'), (2, 'Journée'), (3, 'Forfait'), (4, 'Heure'), (5, 'Autre')], verbose_name='Unité')),
                ('started_at', models.DateTimeField(verbose_name='Début du contrat')),
                ('ended_at', models.DateTimeField(verbose_name='Fin du contrat')),
                ('alternating', models.BooleanField(default=False, help_text="Est une classe d'alternants", verbose_name='Alternant')),
                ('period', models.CharField(choices=[('S1', 'Semestre 1'), ('S2', 'Semestre 2'), ('Q1', 'Trimestre 1'), ('Q2', 'Trimestre 2'), ('Q3', 'Trimestre 3')], max_length=2, verbose_name='Période')),
                ('recruitment_type', models.PositiveSmallIntegerField(choices=[(1, 'Recrutement'), (2, 'Reconduction'), (3, 'Ajout de prestation')], verbose_name='Type de recrutement')),
                ('highest_degree', models.CharField(max_length=255, verbose_name='Diplôme le plus élevé')),
                ('main_area_of_expertise', models.CharField(max_length=255, verbose_name='Domaine de compétence principal')),
                ('second_area_of_expertise', models.CharField(max_length=255, null=True, verbose_name='Deuximèe domaine de compétence')),
                ('third_area_of_expertise', models.CharField(blank=True, max_length=255, verbose_name='Troisième domaine de compétence')),
                ('teaching_expertise_level', models.PositiveSmallIntegerField(choices=[(1, 'Débutant'), (2, 'Intermédiaire'), (3, 'Expert')], verbose_name="Niveau d'expertise en pédagogie")),
                ('professional_expertise_level', models.PositiveSmallIntegerField(choices=[(1, 'Débutant'), (2, 'Intermédiaire'), (3, 'Expert')], verbose_name="Niveau d'expertise en matière professionnelle")),
                ('rp', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rp', to=settings.AUTH_USER_MODEL, verbose_name='Responsable pédagogique')),
            ],
            options={
                'verbose_name': 'Demande de contrat',
                'verbose_name_plural': 'Demandes de contrat',
            },
        ),
        migrations.CreateModel(
            name='StructureCampus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=20, verbose_name='Nom')),
                ('contract_request', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='structure_campus', to='nifleur.contractrequest', verbose_name='Nom ou structure')),
            ],
            options={
                'verbose_name': 'Structure & campus',
                'verbose_name_plural': 'Structures & campus',
            },
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nom')),
                ('civility', models.CharField(choices=[('M', 'Mr'), ('W', 'Mme')], default='M', max_length=1, verbose_name='Civilité')),
                ('company_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Type de la société')),
                ('mail', models.EmailField(max_length=254)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Numéro de téléphone')),
                ('contract_request', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='speaker', to='nifleur.contractrequest', verbose_name='Intervenant')),
            ],
            options={
                'verbose_name': 'Intervenant',
                'verbose_name_plural': 'Intervenants',
            },
        ),
        migrations.CreateModel(
            name='SchoolYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(help_text='ex: M1', max_length=15, verbose_name='Année')),
                ('label', models.CharField(max_length=255, verbose_name='Nom')),
                ('contract_request', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contract_school_year', to='nifleur.contractrequest', verbose_name='Promotion')),
                ('structure_campus', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='promotion_school_year', to='nifleur.structurecampus', verbose_name='Promotion')),
            ],
            options={
                'verbose_name': 'Promotion',
                'verbose_name_plural': 'Promotions',
            },
        ),
        migrations.CreateModel(
            name='RateType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Nom')),
                ('contract_request', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rate_type', to='nifleur.contractrequest', verbose_name='Type de tarif')),
            ],
            options={
                'verbose_name': 'Type de tarif',
                'verbose_name_plural': 'Types de tarif',
            },
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Nom')),
                ('contract_request', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='performance', to='nifleur.contractrequest', verbose_name='Prestation')),
            ],
            options={
                'verbose_name': 'Prestation',
                'verbose_name_plural': 'Prestations',
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255, verbose_name='Nom')),
                ('contract_request', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='discipline', to='nifleur.contractrequest', verbose_name='Matière')),
            ],
            options={
                'verbose_name': 'Matière',
                'verbose_name_plural': 'Matières',
            },
        ),
    ]
